services:       

# ██████╗ ██████╗  ██████╗ ██╗    ██╗██╗      █████╗ ██████╗ ██████╗ 
# ██╔══██╗██╔══██╗██╔═══██╗██║    ██║██║     ██╔══██╗██╔══██╗██╔══██╗
# ██████╔╝██████╔╝██║   ██║██║ █╗ ██║██║     ███████║██████╔╝██████╔╝
# ██╔═══╝ ██╔══██╗██║   ██║██║███╗██║██║     ██╔══██║██╔══██╗██╔══██╗
# ██║     ██║  ██║╚██████╔╝╚███╔███╔╝███████╗██║  ██║██║  ██║██║  ██║
# ╚═╝     ╚═╝  ╚═╝ ╚═════╝  ╚══╝╚══╝ ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═
                              
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    hostname: prowlarr
    volumes:
      - ${ARRPATH}Prowlarr/config:/config
      - ${ARRPATH}Prowlarr/backup:/data/Backup
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 9696:9696
    restart: unless-stopped
    env_file:
      - '.env'
      
# ███████╗ ██████╗ ███╗   ██╗ █████╗ ██████╗ ██████╗ 
# ██╔════╝██╔═══██╗████╗  ██║██╔══██╗██╔══██╗██╔══██╗
# ███████╗██║   ██║██╔██╗ ██║███████║██████╔╝██████╔╝
# ╚════██║██║   ██║██║╚██╗██║██╔══██║██╔══██╗██╔══██╗
# ███████║╚██████╔╝██║ ╚████║██║  ██║██║  ██║██║  ██║
# ╚══════╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝                                                 
      
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    volumes:
      - ${ARRPATH}Sonarr/config:/config
      - ${ARRPATH}Sonarr/backup:/data/Backup
      - ${ARRPATH}Sonarr/tvshows:/data/TVShows   
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
    env_file:
      - '.env'
      
# ██████╗  █████╗ ██████╗  █████╗ ██████╗ ██████╗ 
# ██╔══██╗██╔══██╗██╔══██╗██╔══██╗██╔══██╗██╔══██╗
# ██████╔╝███████║██║  ██║███████║██████╔╝██████╔╝
# ██╔══██╗██╔══██║██║  ██║██╔══██║██╔══██╗██╔══██╗
# ██║  ██║██║  ██║██████╔╝██║  ██║██║  ██║██║  ██║
# ╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝                                              

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    volumes:
      - ${ARRPATH}Radarr/config:/config
      - ${ARRPATH}Radarr/movies:/data/Movies
      - ${ARRPATH}Radarr/backup:/data/Backup
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped
    env_file:
      - '.env'
      
# ██╗     ██╗██████╗  █████╗ ██████╗ ██████╗ 
# ██║     ██║██╔══██╗██╔══██╗██╔══██╗██╔══██╗
# ██║     ██║██║  ██║███████║██████╔╝██████╔╝
# ██║     ██║██║  ██║██╔══██║██╔══██╗██╔══██╗
# ███████╗██║██████╔╝██║  ██║██║  ██║██║  ██║
# ╚══════╝╚═╝╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝
                                             
  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    hostname: lidarr
    volumes:
      - ${ARRPATH}Lidarr/config:/config
      - ${ARRPATH}Lidarr/music:/data/musicfolder
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 8686:8686
    restart: unless-stopped
    env_file:
      - '.env'
      
# ██╗  ██╗ ██████╗ ███╗   ███╗ █████╗ ██████╗ ██████╗ 
# ██║  ██║██╔═══██╗████╗ ████║██╔══██╗██╔══██╗██╔══██╗
# ███████║██║   ██║██╔████╔██║███████║██████╔╝██████╔╝
# ██╔══██║██║   ██║██║╚██╔╝██║██╔══██║██╔══██╗██╔══██╗
# ██║  ██║╚██████╔╝██║ ╚═╝ ██║██║  ██║██║  ██║██║  ██║
# ╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝
        
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - ${ARRPATH}Homarr/configs:/app/data/configs
      - ${ARRPATH}Homarr/icons:/app/public/icons
      - ${ARRPATH}Homarr/data:/data
    ports:
      - '7575:7575'
    env_file:
      - '.env'

#      ██╗███████╗██╗     ██╗  ██╗   ██╗███████╗██╗███╗   ██╗
#      ██║██╔════╝██║     ██║  ╚██╗ ██╔╝██╔════╝██║████╗  ██║
#      ██║█████╗  ██║     ██║   ╚████╔╝ █████╗  ██║██╔██╗ ██║
# ██   ██║██╔══╝  ██║     ██║    ╚██╔╝  ██╔══╝  ██║██║╚██╗██║
# ╚█████╔╝███████╗███████╗███████╗██║   ██║     ██║██║ ╚████║
#  ╚════╝ ╚══════╝╚══════╝╚══════╝╚═╝   ╚═╝     ╚═╝╚═╝  ╚═══╝
     
  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    ports:
      - '8096:8096/tcp'   # Jellyfin web interface
      - '7359:7359/udp'   # Network discovery
      - '1900:1900/udp'   # DLNA port
    volumes:
      - ${ARRPATH}Jellyfin/config:/config
      - ${ARRPATH}Radarr/movies:/data/Movies
      - ${ARRPATH}Sonarr/tvshows:/data/TVShows
      - ${ARRPATH}Lidarr/music:/data/Music
    env_file:
      - '.env'
    restart: unless-stopped
          
# ████████╗██████╗  █████╗ ██████╗ ██████╗ 
# ╚══██╔══╝██╔══██╗██╔══██╗██╔══██╗██╔══██╗
#    ██║   ██║  ██║███████║██████╔╝██████╔╝
#    ██║   ██║  ██║██╔══██║██╔══██╗██╔══██╗
#    ██║   ██████╔╝██║  ██║██║  ██║██║  ██║
#    ╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝

  tdarr:
    image: ghcr.io/haveagitgat/tdarr:latest
    container_name: tdarr
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
    volumes:
      - ${ARRPATH}Tdarr/server:/app/server
      - ${ARRPATH}Tdarr/configs:/app/configs
      - ${ARRPATH}Tdarr/logs:/app/logs
      - ${ARRPATH}Tdarr/scripts:/scripts
      - ${ARRPATH}Radarr/movies:/media/movies
      - ${ARRPATH}Sonarr/tvshows:/media/tvshows
      - ${ARRPATH}Downloads:/temp
    environment:
      - TZ=${TZ}
      - PUID=1000
      - PGID=1000
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - nodeName=MainNode
      - RADARR_API_KEY=d1970c0be668458b88c24cbf3c5d540c
      - SONARR_API_KEY=0620b4cea2404ef5bba11d42069f1051
      - QBITTORRENT_USER=${QBITTORRENT_USER}
      - QBITTORRENT_PASSWORD=${QBITTORRENT_PASSWORD}
      - JELLYFIN_API_KEY=${JELLYFIN_API_KEY}
    env_file:
      - '.env'
    restart: unless-stopped

#  ██████╗ ██████╗ ██╗████████╗████████╗ ██████╗ ██████╗ ██████╗ ███████╗███╗   ██╗████████╗
# ██╔═══██╗██╔══██╗██║╚══██╔══╝╚══██╔══╝██╔═══██╗██╔══██╗██╔══██╗██╔════╝████╗  ██║╚══██╔══╝
# ██║   ██║██████╔╝██║   ██║      ██║   ██║   ██║██████╔╝██████╔╝█████╗  ██╔██╗ ██║   ██║   
# ██║▄▄ ██║██╔══██╗██║   ██║      ██║   ██║   ██║██╔══██╗██╔══██╗██╔══╝  ██║╚██╗██║   ██║   
# ╚██████╔╝██████╔╝██║   ██║      ██║   ╚██████╔╝██║  ██║██║  ██║███████╗██║ ╚████║   ██║   
#  ╚══▀▀═╝ ╚═════╝ ╚═╝   ╚═╝      ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═══╝   ╚═╝                                                                                          
                                                                                             
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    hostname: gluetun
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - VPN_SERVICE_PROVIDER=${OPENVPN_PROVIDER}
      - OPENVPN_USER=${OPENVPN_USERNAME}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - SERVER_COUNTRIES=${SERVER_COUNTRIES}
      - TZ=${TZ}
    ports:
      - 8080:8080 # qBittorrent Web UI
      - 6881:6881 # qBittorrent torrent port TCP
      - 6881:6881/udp # qBittorrent torrent port UDP
    volumes:
      - ${ARRPATH}gluetun:/gluetun
    env_file:
      - '.env'

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    network_mode: service:gluetun
    depends_on:
      - gluetun
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    volumes:
      - ${ARRPATH}qbittorrent/config:/config
      - ${ARRPATH}Downloads:/downloads
    environment:
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    healthcheck:
      start_period: 15s
    env_file:
      - '.env'

#  ██████╗██╗      ██████╗ ██╗   ██╗██████╗ ███████╗██╗      █████╗ ██████╗ ███████╗
# ██╔════╝██║     ██╔═══██╗██║   ██║██╔══██╗██╔════╝██║     ██╔══██╗██╔══██╗██╔════╝
# ██║     ██║     ██║   ██║██║   ██║██║  ██║█████╗  ██║     ███████║██████╔╝█████╗  
# ██║     ██║     ██║   ██║██║   ██║██║  ██║██╔══╝  ██║     ██╔══██║██╔══██╗██╔══╝  
# ╚██████╗███████╗╚██████╔╝╚██████╔╝██████╔╝██║     ███████╗██║  ██║██║  ██║███████╗
#  ╚═════╝╚══════╝ ╚═════╝  ╚═════╝ ╚═════╝ ╚═╝     ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝

  cloudflared-jellyfin:
    container_name: cloudflared-jellyfin
    hostname: cloudflared-jellyfin
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel --no-autoupdate --protocol http2 run --token ${CLOUDFLARE_TUNNEL_TOKEN_JELLYFIN}
    env_file:
      - '.env'

  cloudflared-qbittorrent:
    container_name: cloudflared-qbittorrent
    hostname: cloudflared-qbittorrent
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel --no-autoupdate --protocol http2 run --token ${CLOUDFLARE_TUNNEL_TOKEN_QBITTORRENT}
    env_file:
      - '.env'

  cloudflared-prowlarr:
    container_name: cloudflared-prowlarr
    hostname: cloudflared-prowlarr
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel --no-autoupdate --protocol http2 run --token ${CLOUDFLARE_TUNNEL_TOKEN_PROWLARR}
    env_file:
      - '.env'

  cloudflared-radarr:
    container_name: cloudflared-radarr
    hostname: cloudflared-radarr
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel --no-autoupdate --protocol http2 run --token ${CLOUDFLARE_TUNNEL_TOKEN_RADARR}
    env_file:
      - '.env'

  cloudflared-sonarr:
    container_name: cloudflared-sonarr
    hostname: cloudflared-sonarr
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel --no-autoupdate --protocol http2 run --token ${CLOUDFLARE_TUNNEL_TOKEN_SONARR}
    env_file:
      - '.env'

# ███████╗██╗      █████╗ ██████╗ ███████╗███████╗ ██████╗ ██╗    ██╗   ██╗███████╗██████╗ ██████╗ 
# ██╔════╝██║     ██╔══██╗██╔══██╗██╔════╝██╔════╝██╔═══██╗██║    ██║   ██║██╔════╝██╔══██╗██╔══██╗
# █████╗  ██║     ███████║██████╔╝█████╗  ███████╗██║   ██║██║    ██║   ██║█████╗  ██████╔╝██████╔╝
# ██╔══╝  ██║     ██╔══██║██╔══██╗██╔══╝  ╚════██║██║   ██║██║    ╚██╗ ██╔╝██╔══╝  ██╔══██╗██╔══██╗
# ██║     ███████╗██║  ██║██║  ██║███████╗███████║╚██████╔╝███████╗╚████╔╝ ███████╗██║  ██║██║  ██║
# ╚═╝     ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚══════╝ ╚═════╝ ╚══════╝ ╚═══╝  ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    hostname: flaresolverr
    restart: unless-stopped
    ports:
      - 8191:8191
    environment:
      - LOG_LEVEL=info
      - TZ=${TZ}
    env_file:
      - '.env'
